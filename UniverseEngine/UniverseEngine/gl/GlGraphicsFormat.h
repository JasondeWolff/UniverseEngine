#include "../GraphicsAPI.h"
#ifdef GRAPHICS_API_GL

#include "../GraphicsFormat.h"

namespace UniverseEngine {
    class GlGraphicsFormat {
    public:
        static GLenum ToInternalFormat(const GraphicsFormat& format) {
            switch (format) {
                case GraphicsFormat::R4G4_UNORM_PACK8:
                    return GL_RG16F;
                case GraphicsFormat::R4G4B4A4_UNORM_PACK16:
                    return GL_RGBA16F;
                case GraphicsFormat::B4G4R4A4_UNORM_PACK16:
                    return GL_RGBA4;
                case GraphicsFormat::R5G6B5_UNORM_PACK16:
                    return GL_RGB5;
                case GraphicsFormat::B5G6R5_UNORM_PACK16:
                    return GL_RGB5;
                case GraphicsFormat::R5G5B5A1_UNORM_PACK16:
                    return GL_RGBA16F;
                case GraphicsFormat::B5G5R5A1_UNORM_PACK16:
                    return GL_RGBA8;
                case GraphicsFormat::R8_UNORM:
                    return GL_R16F;
                case GraphicsFormat::R8_SNORM:
                    return GL_R16F;
                case GraphicsFormat::R8_USCALED:
                    return GL_R16F;
                case GraphicsFormat::R8_SSCALED:
                    return GL_R16F;
                case GraphicsFormat::R8_UINT:
                    return GL_R8UI;
                case GraphicsFormat::R8_SINT:
                    return GL_R8I;
                case GraphicsFormat::R8_SRGB:
                    return GL_R8;
                case GraphicsFormat::R8G8_UNORM:
                    return GL_RG16F;
                case GraphicsFormat::R8G8_SNORM:
                    return GL_RG16F;
                case GraphicsFormat::R8G8_USCALED:
                    return GL_RG16F;
                case GraphicsFormat::R8G8_SSCALED:
                    return GL_RG16F;
                case GraphicsFormat::R8G8_UINT:
                    return GL_RG8UI;
                case GraphicsFormat::R8G8_SINT:
                    return GL_RG8I;
                case GraphicsFormat::R8G8_SRGB:
                    return GL_RG;
                case GraphicsFormat::R8G8B8_UNORM:
                    return GL_RGB16F;
                case GraphicsFormat::R8G8B8_SNORM:
                    return GL_RGB16F;
                case GraphicsFormat::R8G8B8_USCALED:
                    return GL_RGB16F;
                case GraphicsFormat::R8G8B8_SSCALED:
                    return GL_RGB16F;
                case GraphicsFormat::R8G8B8_UINT:
                    return GL_RGB8UI;
                case GraphicsFormat::R8G8B8_SINT:
                    return GL_RGB8I;
                case GraphicsFormat::R8G8B8_SRGB:
                    return GL_SRGB8;
                case GraphicsFormat::B8G8R8_UNORM:
                    return GL_RGB16F;
                case GraphicsFormat::B8G8R8_SNORM:
                    return GL_RGB16F;
                case GraphicsFormat::B8G8R8_USCALED:
                    return GL_RGB16F;
                case GraphicsFormat::B8G8R8_SSCALED:
                    return GL_RGB16F;
                case GraphicsFormat::B8G8R8_UINT:
                    return GL_RGB8UI;
                case GraphicsFormat::B8G8R8_SINT:
                    return GL_RGB8I;
                case GraphicsFormat::B8G8R8_SRGB:
                    return GL_SRGB8;
                case GraphicsFormat::R8G8B8A8_UNORM:
                    return GL_RGBA;
                case GraphicsFormat::R8G8B8A8_SNORM:
                    return GL_RGBA16F;
                case GraphicsFormat::R8G8B8A8_USCALED:
                    return GL_RGBA16F;
                case GraphicsFormat::R8G8B8A8_SSCALED:
                    return GL_RGBA16F;
                case GraphicsFormat::R8G8B8A8_UINT:
                    return GL_RGBA8UI;
                case GraphicsFormat::R8G8B8A8_SINT:
                    return GL_RGBA8I;
                case GraphicsFormat::R8G8B8A8_SRGB:
                    return GL_SRGB8_ALPHA8;
                case GraphicsFormat::B8G8R8A8_UNORM:
                    return GL_RGBA16F;
                case GraphicsFormat::B8G8R8A8_SNORM:
                    return GL_RGBA16F;
                case GraphicsFormat::B8G8R8A8_USCALED:
                    return GL_RGBA16F;
                case GraphicsFormat::B8G8R8A8_SSCALED:
                    return GL_RGBA16F;
                case GraphicsFormat::B8G8R8A8_UINT:
                    return GL_RGBA8UI;
                case GraphicsFormat::B8G8R8A8_SINT:
                    return GL_RGBA8I;
                case GraphicsFormat::B8G8R8A8_SRGB:
                    return GL_RGBA;
            }
            return GL_RED;
        }

        static GLenum ToFormat(const GraphicsFormat& format) {
            switch (format) {
                case GraphicsFormat::R4G4_UNORM_PACK8:
                    return GL_RG;
                case GraphicsFormat::R4G4B4A4_UNORM_PACK16:
                    return GL_RGBA;
                case GraphicsFormat::B4G4R4A4_UNORM_PACK16:
                    return GL_BGRA;
                case GraphicsFormat::R5G6B5_UNORM_PACK16:
                    return GL_RGB;
                case GraphicsFormat::B5G6R5_UNORM_PACK16:
                    return GL_BGR;
                case GraphicsFormat::R5G5B5A1_UNORM_PACK16:
                    return GL_RGBA;
                case GraphicsFormat::B5G5R5A1_UNORM_PACK16:
                    return GL_BGRA;
                case GraphicsFormat::R8_UNORM:
                    return GL_RED;
                case GraphicsFormat::R8_SNORM:
                    return GL_RED;
                case GraphicsFormat::R8_USCALED:
                    return GL_RED;
                case GraphicsFormat::R8_SSCALED:
                    return GL_RED;
                case GraphicsFormat::R8_UINT:
                    return GL_RED_INTEGER;
                case GraphicsFormat::R8_SINT:
                    return GL_RED_INTEGER;
                case GraphicsFormat::R8_SRGB:
                    return GL_RED;
                case GraphicsFormat::R8G8_UNORM:
                    return GL_RG;
                case GraphicsFormat::R8G8_SNORM:
                    return GL_RG;
                case GraphicsFormat::R8G8_USCALED:
                    return GL_RG;
                case GraphicsFormat::R8G8_SSCALED:
                    return GL_RG;
                case GraphicsFormat::R8G8_UINT:
                    return GL_RG_INTEGER;
                case GraphicsFormat::R8G8_SINT:
                    return GL_RG_INTEGER;
                case GraphicsFormat::R8G8_SRGB:
                    return GL_RG;
                case GraphicsFormat::R8G8B8_UNORM:
                    return GL_RGB;
                case GraphicsFormat::R8G8B8_SNORM:
                    return GL_RGB;
                case GraphicsFormat::R8G8B8_USCALED:
                    return GL_RGB;
                case GraphicsFormat::R8G8B8_SSCALED:
                    return GL_RGB;
                case GraphicsFormat::R8G8B8_UINT:
                    return GL_RGB_INTEGER;
                case GraphicsFormat::R8G8B8_SINT:
                    return GL_RGB_INTEGER;
                case GraphicsFormat::R8G8B8_SRGB:
                    return GL_RGB;
                case GraphicsFormat::B8G8R8_UNORM:
                    return GL_BGR;
                case GraphicsFormat::B8G8R8_SNORM:
                    return GL_BGR;
                case GraphicsFormat::B8G8R8_USCALED:
                    return GL_BGR;
                case GraphicsFormat::B8G8R8_SSCALED:
                    return GL_BGR;
                case GraphicsFormat::B8G8R8_UINT:
                    return GL_BGR_INTEGER;
                case GraphicsFormat::B8G8R8_SINT:
                    return GL_BGR_INTEGER;
                case GraphicsFormat::B8G8R8_SRGB:
                    return GL_BGR;
                case GraphicsFormat::R8G8B8A8_UNORM:
                    return GL_RGBA;
                case GraphicsFormat::R8G8B8A8_SNORM:
                    return GL_RGBA;
                case GraphicsFormat::R8G8B8A8_USCALED:
                    return GL_RGBA;
                case GraphicsFormat::R8G8B8A8_SSCALED:
                    return GL_RGBA;
                case GraphicsFormat::R8G8B8A8_UINT:
                    return GL_RGBA_INTEGER;
                case GraphicsFormat::R8G8B8A8_SINT:
                    return GL_RGBA_INTEGER;
                case GraphicsFormat::R8G8B8A8_SRGB:
                    return GL_RGBA;
                case GraphicsFormat::B8G8R8A8_UNORM:
                    return GL_BGRA;
                case GraphicsFormat::B8G8R8A8_SNORM:
                    return GL_BGRA;
                case GraphicsFormat::B8G8R8A8_USCALED:
                    return GL_BGRA;
                case GraphicsFormat::B8G8R8A8_SSCALED:
                    return GL_BGRA;
                case GraphicsFormat::B8G8R8A8_UINT:
                    return GL_BGRA_INTEGER;
                case GraphicsFormat::B8G8R8A8_SINT:
                    return GL_BGRA_INTEGER;
                case GraphicsFormat::B8G8R8A8_SRGB:
                    return GL_BGRA;
            }
            return GL_RED;
        }

         static GLenum ToType(const GraphicsFormat& format) {
            switch (format) {
                case GraphicsFormat::R4G4_UNORM_PACK8:
                    return GL_HALF_FLOAT;
                case GraphicsFormat::R4G4B4A4_UNORM_PACK16:
                    return GL_HALF_FLOAT;
                case GraphicsFormat::B4G4R4A4_UNORM_PACK16:
                    return GL_HALF_FLOAT;
                case GraphicsFormat::R5G6B5_UNORM_PACK16:
                    return GL_HALF_FLOAT;
                case GraphicsFormat::B5G6R5_UNORM_PACK16:
                    return GL_HALF_FLOAT;
                case GraphicsFormat::R5G5B5A1_UNORM_PACK16:
                    return GL_HALF_FLOAT;
                case GraphicsFormat::B5G5R5A1_UNORM_PACK16:
                    return GL_HALF_FLOAT;
                case GraphicsFormat::R8_UNORM:
                    return GL_HALF_FLOAT;
                case GraphicsFormat::R8_SNORM:
                    return GL_HALF_FLOAT;
                case GraphicsFormat::R8_USCALED:
                    return GL_HALF_FLOAT;
                case GraphicsFormat::R8_SSCALED:
                    return GL_HALF_FLOAT;
                case GraphicsFormat::R8_UINT:
                    return GL_UNSIGNED_BYTE;
                case GraphicsFormat::R8_SINT:
                    return GL_BYTE;
                case GraphicsFormat::R8_SRGB:
                    return GL_UNSIGNED_BYTE;
                case GraphicsFormat::R8G8_UNORM:
                    return GL_HALF_FLOAT;
                case GraphicsFormat::R8G8_SNORM:
                    return GL_HALF_FLOAT;
                case GraphicsFormat::R8G8_USCALED:
                    return GL_HALF_FLOAT;
                case GraphicsFormat::R8G8_SSCALED:
                    return GL_HALF_FLOAT;
                case GraphicsFormat::R8G8_UINT:
                    return GL_UNSIGNED_BYTE;
                case GraphicsFormat::R8G8_SINT:
                    return GL_BYTE;
                case GraphicsFormat::R8G8_SRGB:
                    return GL_UNSIGNED_BYTE;
                case GraphicsFormat::R8G8B8_UNORM:
                    return GL_HALF_FLOAT;
                case GraphicsFormat::R8G8B8_SNORM:
                    return GL_HALF_FLOAT;
                case GraphicsFormat::R8G8B8_USCALED:
                    return GL_HALF_FLOAT;
                case GraphicsFormat::R8G8B8_SSCALED:
                    return GL_HALF_FLOAT;
                case GraphicsFormat::R8G8B8_UINT:
                    return GL_UNSIGNED_BYTE;
                case GraphicsFormat::R8G8B8_SINT:
                    return GL_BYTE;
                case GraphicsFormat::R8G8B8_SRGB:
                    return GL_UNSIGNED_BYTE;
                case GraphicsFormat::B8G8R8_UNORM:
                    return GL_HALF_FLOAT;
                case GraphicsFormat::B8G8R8_SNORM:
                    return GL_HALF_FLOAT;
                case GraphicsFormat::B8G8R8_USCALED:
                    return GL_HALF_FLOAT;
                case GraphicsFormat::B8G8R8_SSCALED:
                    return GL_HALF_FLOAT;
                case GraphicsFormat::B8G8R8_UINT:
                    return GL_UNSIGNED_BYTE;
                case GraphicsFormat::B8G8R8_SINT:
                    return GL_BYTE;
                case GraphicsFormat::B8G8R8_SRGB:
                    return GL_UNSIGNED_BYTE;
                case GraphicsFormat::R8G8B8A8_UNORM:
                    return GL_UNSIGNED_BYTE;
                case GraphicsFormat::R8G8B8A8_SNORM:
                    return GL_HALF_FLOAT;
                case GraphicsFormat::R8G8B8A8_USCALED:
                    return GL_HALF_FLOAT;
                case GraphicsFormat::R8G8B8A8_SSCALED:
                    return GL_HALF_FLOAT;
                case GraphicsFormat::R8G8B8A8_UINT:
                    return GL_UNSIGNED_BYTE;
                case GraphicsFormat::R8G8B8A8_SINT:
                    return GL_BYTE;
                case GraphicsFormat::R8G8B8A8_SRGB:
                    return GL_UNSIGNED_BYTE;
                case GraphicsFormat::B8G8R8A8_UNORM:
                    return GL_HALF_FLOAT;
                case GraphicsFormat::B8G8R8A8_SNORM:
                    return GL_HALF_FLOAT;
                case GraphicsFormat::B8G8R8A8_USCALED:
                    return GL_HALF_FLOAT;
                case GraphicsFormat::B8G8R8A8_SSCALED:
                    return GL_HALF_FLOAT;
                case GraphicsFormat::B8G8R8A8_UINT:
                    return GL_UNSIGNED_BYTE;
                case GraphicsFormat::B8G8R8A8_SINT:
                    return GL_BYTE;
                case GraphicsFormat::B8G8R8A8_SRGB:
                    return GL_UNSIGNED_BYTE;
            }
            return GL_UNSIGNED_BYTE;
        }
    };
}  // namespace UniverseEngine
#endif